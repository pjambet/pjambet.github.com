<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Eric Jones</title>
 <link href="http://pjambet.github.com/atom.xml" rel="self"/>
 <link href="http://pjambet.github.com/"/>
 <updated>2013-08-28T16:58:13-04:00</updated>
 <id>http://pjambet.github.com</id>
 <author>
   <name>Eric Jones</name>
 </author>

 
 <entry>
   <title>Emojis and MySQL</title>
   <link href="http://pjambet.github.com/blog/emojis-and-mysql"/>
   <updated>2013-08-28T00:00:00-04:00</updated>
   <id>http://pjambet.github.com/blog/emojis-and-mysql</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;tl;dr; MySQL regular UTF8 encoding sucks, you should use UTF8mb4 (or even
better, Postgres !)&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;Intro&lt;/h2&gt;

&lt;p&gt;In the past few months I had to struggle with MySQL and its crappy UTF8 support,
so I thought I would sum up my findings here.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;ve seen stuff like&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;Mysql::Error: Specified key was too long; max key length is 767 bytes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;Mysql2::Error: Incorrect string value: &amp;#39;\xF0\x9F\x8F\xA0&amp;#39; for column &amp;#39;body&amp;#39; at row 1 ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then maybe this article can help you.&lt;/p&gt;

&lt;h2&gt;Technical details !&lt;/h2&gt;

&lt;p&gt;Basically, in order to store the whole range of UTF8 characters, each chararacter
has to be 4 bytes wide. But MySQL, with its default UTF8 encoding will only
allocate 3 bytes per character.
This becomes a problem when users try to insert character such as emojis in your
database.
That might sound like an edge case, but if your app is an API where users can
post content through their phones, then it&amp;#39;s really likely some people will add
emojis.&lt;/p&gt;

&lt;p&gt;If you want a comprehensive guide for migrating your mysql database from utf8 to
utf8mb4, &lt;a href=&quot;http://mathiasbynens.be/notes/mysql-utf8mb4&quot;&gt;this article&lt;/a&gt; contains
everything you need.&lt;/p&gt;

&lt;h2&gt;How to use it in Rails and Django&lt;/h2&gt;

&lt;p&gt;Using utf8mb4 is quite straight forward&lt;/p&gt;

&lt;h3&gt;Django example :&lt;/h3&gt;

&lt;p&gt;in your new project :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;$&amp;gt; django-admin.py startproject test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Simply add the &lt;code&gt;charset&lt;/code&gt; option in the &lt;code&gt;DATABASES&lt;/code&gt; setting :&lt;/p&gt;

&lt;p&gt;&lt;em&gt;settings.py&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;DATABASES = {
    &amp;#39;default&amp;#39;: {
        &amp;#39;ENGINE&amp;#39;: &amp;#39;django.db.backends.mysql&amp;#39;,
        &amp;#39;NAME&amp;#39;: &amp;#39;test&amp;#39;,
        &amp;#39;USER&amp;#39;: &amp;#39;test_user&amp;#39;
        &amp;#39;OPTIONS&amp;#39;: {&amp;#39;charset&amp;#39;: &amp;#39;utf8mb4&amp;#39;},
        &amp;#39;PASSWORD&amp;#39;: &amp;#39;&amp;#39;,
        &amp;#39;HOST&amp;#39;: &amp;#39;&amp;#39;,
        &amp;#39;PORT&amp;#39;: &amp;#39;&amp;#39;,
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And you&amp;#39;re good to go !&lt;/p&gt;

&lt;h4&gt;Caveat&lt;/h4&gt;

&lt;p&gt;There is still a problem with that configuration. Now the maximum length that
MySQL can index is &lt;code&gt;191&lt;/code&gt; instead of &lt;code&gt;255&lt;/code&gt;.
That won&amp;#39;t be a problem if you apply this new limit on your models, but some
libraries, such as celery try to index some column with a 255 max length.&lt;/p&gt;

&lt;p&gt;So if you have &lt;code&gt;djcelery&lt;/code&gt; in your &lt;code&gt;INSTALLED_APPS&lt;/code&gt;, running your migrations
(&lt;code&gt;python manage.py migrate&lt;/code&gt;) will fail with a nice :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;django.db.utils.DatabaseError: (1071, &amp;#39;Specified key was too long; max key length is 767 bytes&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The only solution I found so far is to only run migrations on an app per app
basis.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;python manage.py migrate myapp
python manage.py migrate anotherapp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and for the app that fails, such as &lt;code&gt;djcelery&lt;/code&gt;, first run&lt;/p&gt;

&lt;p&gt;&lt;code&gt;python manage.py sqall djcelery&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Which should give you an output similar to :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;BEGIN;
CREATE TABLE `celery_taskmeta` (
    `id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `task_id` varchar(255) NOT NULL UNIQUE,
    `status` varchar(50) NOT NULL,
    `result` longtext,
    `date_done` datetime NOT NULL,
    `traceback` longtext,
    `hidden` bool NOT NULL,
    `meta` longtext
)
;

# other CREATE TABLES ...

CREATE INDEX `djcelery_taskstate_c91f1bf` ON `djcelery_taskstate` (`hidden`);
COMMIT;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then copy this in your favorite editor (vim, of course !), and specify the
&lt;code&gt;CHARACTER SET&lt;/code&gt; as &lt;code&gt;utf8&lt;/code&gt; for each table. This should not cause any issues, as
all the data that is gonna be inserted in those tables is controlled by celery
itself, and there should not be any emojis are other 4 bytes wide characters.&lt;/p&gt;

&lt;p&gt;Then your new file should look like :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;BEGIN;
CREATE TABLE `celery_taskmeta` (
    `id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `task_id` varchar(255) NOT NULL UNIQUE,
    `status` varchar(50) NOT NULL,
    `result` longtext,
    `date_done` datetime NOT NULL,
    `traceback` longtext,
    `hidden` bool NOT NULL,
    `meta` longtext
) CHARACTER SET=utf8 # Note the CHARACTER SET explictly set
;

# ... and the rest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PS : I&amp;#39;ve opened &lt;a href=&quot;https://github.com/celery/django-celery/issues/259&quot;&gt;an issue on
github&lt;/a&gt;, and I am still
waiting for more information
about this problem.&lt;/p&gt;

&lt;h3&gt;Rails example :&lt;/h3&gt;

&lt;p&gt;Note that utf8mb4 support in rails is &lt;a href=&quot;https://github.com/rails/rails/issues/9855&quot;&gt;really
recent&lt;/a&gt;, and is only supported since
rails 4.0.0&lt;/p&gt;

&lt;p&gt;in your new rails project :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;$&amp;gt; rails new test -d mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;database.yml&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;# MySQL.  Versions 4.1 and 5.0 are recommended.
#
# Install the MYSQL driver
#   gem install mysql2
#
# Ensure the MySQL gem is defined in your Gemfile
#   gem &amp;#39;mysql2&amp;#39;
#
# And be sure to use new-style password hashing:
#   http://dev.mysql.com/doc/refman/5.0/en/old-client.html
development:
  adapter: mysql2
  encoding: utf8mb4
  database: test_development
  pool: 5
  username: root
  password:
  socket: /tmp/mysql.sock

# Warning: The database defined as &amp;quot;test&amp;quot; will be erased and
# re-generated from your development database when you run &amp;quot;rake&amp;quot;.
# Do not set this db to the same as development or production.
test:
  adapter: mysql2
  encoding: utf8mb4
  database: test_test
  pool: 5
  username: root
  password:
  socket: /tmp/mysql.sock

production:
  adapter: mysql2
  encoding: utf8mb4
  database: test_production
  pool: 5
  username: root
  password:
  socket: /tmp/mysql.sock
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Use postgresql if you can !&lt;/h2&gt;

&lt;p&gt;This won&amp;#39;t really help you if you&amp;#39;re stuck with MySQL. In my case, I had to use
AWS and had to use MySQL. Even if it&amp;#39;s possible to use postgresql on AWS, using
RDS has many advantages, such as the ease of setup and configuration.&lt;/p&gt;

&lt;p&gt;So if you have the choice, use postgresql ! I haven&amp;#39;t seen any advantages of
MySQL over postgresql.&lt;/p&gt;

&lt;p&gt;Postgres UTF8 encoding works like a charm (and it should be the same for every
RDBMS), that means no encoding, collation or index length headaches. It just
works !&lt;/p&gt;

&lt;p&gt;And of course if you start using posgresql, you&amp;#39;ll discover a bunch of amazing
features such as &lt;a href=&quot;http://www.postgresql.org/docs/9.1/static/arrays.html&quot;&gt;array
columns&lt;/a&gt;,
&lt;a href=&quot;http://www.postgresql.org/docs/9.1/static/hstore.html&quot;&gt;hstore&lt;/a&gt; and many other
really awesome stuff !&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Beech is finally here</title>
   <link href="http://pjambet.github.com/blog/beech-is-here"/>
   <updated>2013-03-16T00:00:00-04:00</updated>
   <id>http://pjambet.github.com/blog/beech-is-here</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;tl;dr; Beech is available on the &lt;a href=&quot;http://getbeech.com/&quot; title=&quot;Beech app store&quot;&gt;App Store&lt;/a&gt;, please download it, and use it !&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;It&amp;#39;s finally here !&lt;/h2&gt;

&lt;p&gt;Wait is over, after a few months of intense hard work, well actually not that hard and not that intense, &lt;a href=&quot;https://twitter.com/lucchaissac&quot;&gt;@lucchaissac&lt;/a&gt; and I released the first version of Beech.&lt;/p&gt;

&lt;p&gt;The App is registered under my account, that&amp;#39;s why it&amp;#39;s listed as being developped by me, but I can assure you that Luc is also a member of the team.&lt;/p&gt;

&lt;p&gt;Enough talk, this is what it looks like :&lt;/p&gt;

&lt;div class=&quot;images&quot;&gt;
  &lt;img class=&quot;img-polaroid&quot; src=&quot;http://f.cl.ly/items/2L2v0c0C3u3O1X3H2f29/help-screen-1@2x.png&quot; title=&quot;Help screen&quot; alt=&quot;help screen 1&quot; width=&quot;225&quot; /&gt;
  &lt;img class=&quot;img-polaroid&quot; src=&quot;http://f.cl.ly/items/1X1b0o1y3J051u072P1S/help-screen-2@2x.png&quot; title=&quot;Help screen&quot; alt=&quot;help screen 1&quot; width=&quot;225&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;small&gt;Those images are stolen from the &amp;quot;Welcome tour&amp;quot; that is presented to new users after their login&lt;/small&gt;&lt;/p&gt;

&lt;h3&gt;Main features&lt;/h3&gt;

&lt;p&gt;One bad news is that the App is only available in French so far. But that will change really soon, I&amp;#39;m currently working on an english version, and will deploy it soon. It should only be a matter of weeks, it depends on my availability. But anyway, I think that the App is simple enough so far that everyone can use it, not need to be a french expert to understand how it works.&lt;/p&gt;

&lt;p&gt;The basic features we wanted are available :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can &amp;quot;beech&amp;quot; any beers you like&lt;/li&gt;
&lt;li&gt;If the beer you love is not in our list, you can suggest it, and we&amp;#39;ll (quickly) review it and validate it&lt;/li&gt;
&lt;li&gt;You can earn cool badges based on what you drink&lt;/li&gt;
&lt;li&gt;You can follow your friends beechs&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Future improvements&lt;/h3&gt;

&lt;p&gt;Here are the things we&amp;#39;re working on right now to make the app even more awesome&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An english version (of course !)&lt;/li&gt;
&lt;li&gt;Connection with other social networks, at least twitter and facebook&lt;/li&gt;
&lt;li&gt;Comments and likes on each beech&lt;/li&gt;
&lt;li&gt;Geolocation, so we can then tell you where you can find your favorite beers and so on ...&lt;/li&gt;
&lt;li&gt;And many more features that will pop into our heads in the future&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;images&quot;&gt;
  &lt;img class=&quot;img-polaroid centered&quot; src=&quot;http://f.cl.ly/items/3j2n1g3V3I2L091Q2r44/help-screen-3@2x.png&quot; title=&quot;Help screen&quot; alt=&quot;help screen 1&quot; width=&quot;225&quot; /&gt;
  &lt;img class=&quot;img-polaroid centered&quot; src=&quot;http://f.cl.ly/items/0p3e0V3G22443g223T0S/help-screen-4@2x.png&quot; title=&quot;Help screen&quot; alt=&quot;help screen 1&quot; width=&quot;225&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;small&gt;Those images are also stolen from the &amp;quot;Welcome tour&amp;quot; that is presented to new users after their login&lt;/small&gt;&lt;/p&gt;

&lt;h3&gt;Working on your own project is fucking awesome&lt;/h3&gt;

&lt;p&gt;The main thing I learnt while working on Beech, except that I definitely hate xcode, objective C and in general Apple, and before someone ask, yes I use a macbook and have an iphone, but seriously, there are some things I really hate when developing an iphone app :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;itunes connect, and in general every thing on the Apple Developer Portal, suck so hard that it is sometimes surrealistic&lt;/li&gt;
&lt;li&gt;why am I forced to use xcode, seriously the thing is not that bad, but when you use it intensively, it crashes &lt;strong&gt;at least&lt;/strong&gt; once per day. Really ??&lt;/li&gt;
&lt;li&gt;objective-c ... well I don&amp;#39;t like it, that&amp;#39;s it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enough about that, the only thing I wanted to say, is that working on your own project is so far one of the best thing I did in my short career, and the reason is simple :&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You make the decisions, not the stupid client.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What it meant for us is that we were able to implement our designs and our features, whereas when working on client projects, we always ended up changing all our original ideas because
&lt;i&gt;the client&lt;/i&gt;
decided that he didn&amp;#39;t like it.&lt;/p&gt;

&lt;p&gt;Wanna help us ? The server&amp;#39;s code is on my github account, go check it out if you&amp;#39;re interested on how it works : &lt;a href=&quot;https://github.com/pjambet/beech-server&quot;&gt;https://github.com/pjambet/beech-server&lt;/a&gt;, and you might find some bug/issues and could help me fix them ! And if you want to participate to the development that&amp;#39;s even more awesome !!&lt;/p&gt;

&lt;h3&gt;The end&lt;/h3&gt;

&lt;p&gt;Please follow us on twitter (though it&amp;#39;s really calm so far, we will change that soon!), and if you have any questions, remarks, ideas, please send us an email : &lt;a href=&quot;mailto:contact@getbeech.com&quot;&gt;contact@getbeech.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Don&amp;#39;t forget, you can download the app here : &lt;a href=&quot;https://itunes.apple.com/fr/app/beech./id607747222?l=en&amp;amp;mt=8&quot;&gt;https://itunes.apple.com/fr/app/beech./id607747222?l=en&amp;amp;mt=8&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;One last thing, please go check out Luc&amp;#39;s job on &lt;a href=&quot;http://dribbble.com/lucchaissac&quot;&gt;Dribbble&lt;/a&gt;, or his &lt;a href=&quot;http://lucchaissac.com/portfolio.html&quot;&gt;portfolio&lt;/a&gt;, it&amp;#39;s really awesome ! (and not he didn&amp;#39;t bribe me so I say that !)&lt;/strong&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>New revolutionnary app coming soon</title>
   <link href="http://pjambet.github.com/blog/beech-app"/>
   <updated>2012-11-19T00:00:00-05:00</updated>
   <id>http://pjambet.github.com/blog/beech-app</id>
   <content type="html">&lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;span9 columns&quot;&gt;
&lt;p&gt;&lt;em&gt;Note: This news is delivered with love by &lt;a href=&quot;http://lucchaissac.com/&quot; title=&quot;Luc Chaissac&quot; target=&quot;_blank&quot;&gt;Luc Chaissac&lt;/a&gt; &amp;amp; &lt;a href=&quot;http://pjambet.github.com/&quot; title=&quot;Pierre Jambet&quot; target=&quot;_blank&quot;&gt;Pierre Jambet&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Good morning! We have some exciting news for all the beer lovers out there. For quite a long time we’ve been waiting for the perfect idea that would give birth to the app of our dreams. Basically: Intuitive, fluid &amp;amp; attractive.&lt;/p&gt;
&lt;p&gt;After months of intensive search for the perfect idea, we realised that the answer had been in front of us the whole time: “beer”. What if we could keep a track of all our beers achievements, and in the meantime keep all our friends aware of what you drink and when you drink it. Add an awesome achievement system, with a slick UI and bam, beech was born!&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;beech&quot; height=&quot;500&quot; src=&quot;http://lucchaissac.com/blog/beech.jpg&quot; width=&quot;690&quot;/&gt;&lt;/p&gt;
&lt;p&gt;First version mainly focuses on stability and not on a bunch of shaky features. We already have a lof of ideas for future releases, and new ones keep on popping in our heads every minutes. So don’t worry and stay tuned for more information.&lt;/p&gt;
&lt;p&gt;We’re just finishing our 24h kick off session, and we’ll do that kind of intense non-stop design/coding again and again until beech works flawlessly.&lt;/p&gt;
&lt;p&gt;Handcrafted in bordeaux by beer lovers for beer lovers.&lt;/p&gt;
  &lt;div&gt;
&lt;/div&gt;

&lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/direct-upload-to-s3&quot; title=&quot;Previous Post: Direct upload to s3 with cors&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/beech-is-here&quot; title=&quot;Next Post: Beech is finally here&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;span9 columns&quot;&gt;
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt;
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;githubpagepjambet&#39;; // required: replace example with your forum shortname
            var disqus_identifier = &#39;/blog/beech-app&#39;;
            var disqus_url = &#39;http://pjambet.github.com/blog/beech-app&#39;;

            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;!-- Twitter --&gt;

&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;

&lt;!-- Google + --&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;
</content>
 </entry>
 
 <entry>
   <title>Direct upload to s3 with cors</title>
   <link href="http://pjambet.github.com/blog/direct-upload-to-s3"/>
   <updated>2012-09-21T00:00:00-04:00</updated>
   <id>http://pjambet.github.com/blog/direct-upload-to-s3</id>
   <content type="html">&lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;span9 columns&quot;&gt;
    &lt;h2&gt;EDIT&lt;/h2&gt;
    &lt;p&gt;Everything detailed in this article has been wrapped up in &lt;a href=&quot;https://github.com/waynehoover/s3_direct_upload&quot;&gt;this gem&lt;/a&gt;, you should give it a look !&lt;/p&gt;
    &lt;p&gt;Anyway, I still advise you to read this article as it will probably help you how everything works !&lt;/p&gt;
      &lt;h2&gt;Preface&lt;/h2&gt;
      &lt;p&gt;Since beginning of september, Amazon added &lt;a href=&quot;http://www.w3.org/TR/cors/&quot;&gt;CORS&lt;/a&gt; support to S3. As this is quite recent, there are not yet a lot of documentation and tutorials about how to set eveything up and running for your app.&lt;/p&gt;
      &lt;p&gt;Furthermore, &lt;a href=&quot;http://blueimp.github.com/jQuery-File-Upload/&quot;&gt;this jQuery plugin&lt;/a&gt; is awesome, mainly for the progress bar handling, but sadly the example &lt;a href=&quot;https://github.com/blueimp/jQuery-File-Upload/wiki/Upload-directly-to-S3&quot;&gt;in the wiki&lt;/a&gt; is obsolete.&lt;/p&gt;
    &lt;p&gt;If somehow you&#39;re working with heroku you might have already faced the 30s limit on each requests. There are some alternatives, such as the extension of the great &lt;a href=&quot;https://github.com/jnicklas/carrierwave&quot;&gt;carrier wave gem&lt;/a&gt;, &lt;a href=&quot;https://github.com/dwilkie/carrierwave_direct&quot;&gt;carrierwave direct&lt;/a&gt;. I gave it a quick look, but I found it quite crappy, as it forces you to change your carrier wave settings (removing the store_dir method, really ?) and it only works for a single file. So I thought it would be better to handle upload manually for big files, and rely on vanilla carrier_wave for my other small uploads.&lt;/p&gt;
      &lt;p&gt;I found other interesting examples but they all lacked important things, and none of them worked out of the box, hence this short guide. This tutorial is inspired by &lt;a href=&quot;http://highgroove.com/articles/2012/09/11/upload-directly-to-Amazon-s3-with-support-for-cors.html&quot;&gt;that post&lt;/a&gt; and &lt;a href=&quot;http://www.ioncannon.net/programming/1539/direct-browser-uploading-amazon-s3-cors-fileapi-xhr2-and-signed-puts/&quot;&gt;that one&lt;/a&gt;.&lt;/p&gt;
        &lt;h2&gt;Setup your bucket&lt;/h2&gt;
        &lt;p&gt;First you&#39;ll need to setup your bucket to enable CORS under certain conditions.&lt;/p&gt;

    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;xml&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;CORSConfiguration&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;CORSRule&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;AllowedOrigin&amp;gt;&lt;/span&gt;*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/AllowedOrigin&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;AllowedMethod&amp;gt;&lt;/span&gt;GET&lt;span class=&quot;nt&quot;&gt;&amp;lt;/AllowedMethod&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;AllowedMethod&amp;gt;&lt;/span&gt;POST&lt;span class=&quot;nt&quot;&gt;&amp;lt;/AllowedMethod&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;AllowedMethod&amp;gt;&lt;/span&gt;PUT&lt;span class=&quot;nt&quot;&gt;&amp;lt;/AllowedMethod&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;AllowedHeader&amp;gt;&lt;/span&gt;*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/AllowedHeader&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/CORSRule&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/CORSConfiguration&amp;gt;&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    &lt;p&gt;Of course those settings are only for development purpose, you&#39;ll probably want to restrict the Allowed Origin rule to your domain only. &lt;a href=&quot;http://docs.amazonwebservices.com/AmazonS3/latest/dev/cors.html&quot;&gt;Documentation&lt;/a&gt; about those settings is quite good.&lt;/p&gt;

        &lt;h2&gt;Setup your server&lt;/h2&gt;
        &lt;p&gt;In order to send your files to s3, you have to include a set of options as described &lt;a href=&quot;http://aws.amazon.com/articles/1434&quot;&gt;in the official doc here&lt;/a&gt; and &lt;a href=&quot;&quot;&gt;there&lt;/a&gt;&lt;/p&gt;
        &lt;p&gt;One solution would be to directly write the content of all those variables in the form, so it&#39;s ready to be submitted, but I believe that most of those value should not be written in the DOM. So we&#39;ll create a new route we&#39;ll use to fetch those data.&lt;/p&gt;
    &lt;p&gt;This example is written with Rails, but writing the same for another framework should be really simple&lt;/p&gt;
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;    &lt;span class=&quot;ss&quot;&gt;MyApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:Application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:signed_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:index&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    &lt;p&gt;Now that we have our new route, let&#39;s create the controller which will send back our data to the s3 form&lt;/p&gt;

    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SignedUrlsController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;policy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3_upload_policy_document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;signature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3_upload_signature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;uploads/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SecureRandom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uuid&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;success_action_redirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

      &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# generate the policy document that amazon is expecting.&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;s3_upload_policy_document&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;Base64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;ss&quot;&gt;expiration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minutes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;%Y-%m-%dT%H:%M:%S.000Z&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;ss&quot;&gt;conditions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;S3_BUCKET&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;acl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;public-read&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
              &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;starts-with&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$key&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;uploads/&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;success_action_status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;201&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_json&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/\n|\r/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# sign our request by Base64 encoding the policy document.&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;s3_upload_signature&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;Base64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;OpenSSL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:HMAC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;digest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;ss&quot;&gt;OpenSSL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:Digest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Digest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;sha1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;AWS_SECRET_KEY_ID&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;s3_upload_policy_document&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/\n/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    &lt;p&gt;The policy and signature method are stolen from the linked blog posts above with one exception, I had to include the &quot;starts-width&quot; constraint, otherwise s3 was yelling 403 to me.&lt;/p&gt;
    &lt;p&gt;Everything else is quite straight forward, there&#39;s just a small detail to consider if you set the acl to &#39;private&#39;, but more on that later.&lt;/p&gt;
    &lt;p&gt;One last detail, the key value is actually the path of your file on your bucket, so set it to whatever you want but be sure it matches the constraint you set in the policy. Here we&#39;re using &lt;code&gt;params[:doc][:file]&lt;/code&gt; to read the name of the file we&#39;re about to upload. We&#39;ll see more about that when setting the javascript.&lt;/p&gt;
    &lt;p&gt;That&#39;s basically everything we have to do on the server side&lt;/p&gt;

        &lt;h2&gt;Add the jQueryFileUpload files&lt;/h2&gt;
        &lt;p&gt;Next you&#39;ll have to add the &lt;a href=&quot;http://blueimp.github.com/jQuery-File-Upload/&quot;&gt;jQueryFileUpload&lt;/a&gt; files. The plugins ships with a lof of files, but I found most of them useless, so here is the list
        &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;vendor/jquery.ui.widget&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;jquery.fileupload&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
        &lt;/p&gt;

        &lt;h2&gt;Setup the javascript client side&lt;/h2&gt;
    &lt;p&gt;Now let&#39;s setup jQueryFileUpload to send the correct data to s3&lt;/p&gt;
    &lt;p&gt;Based on what we did on the server, the workflow will be composed of 2 requests, first, it&#39;s going to fetch the needed data from our server, then send everything to s3.&lt;/p&gt;

    &lt;p&gt;Here is the form I&#39;m using, the order of parameter is important.&lt;/p&gt;

    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;haml&quot;&gt;     &lt;span class=&quot;nt&quot;&gt;%form&lt;/span&gt;(&lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;https://#{ENV[&amp;#39;S3_BUCKET&amp;#39;]}.s3.amazonaws.com&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;post&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;enctype=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;multipart/form-data&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;direct-upload&amp;#39;&lt;/span&gt;)
        &lt;span class=&quot;nt&quot;&gt;%input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;%input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;AWSAccessKeyId&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;AWS_ACCESS_KEY_ID&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;%input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:acl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;public-read&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;%input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:policy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;%input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:signature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;%input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:success_action_status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;201&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;nt&quot;&gt;%input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:file&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# You can recognize some bootstrap markup here :)&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;.progress.progress-striped.active&lt;/span&gt;
          &lt;span class=&quot;nc&quot;&gt;.bar&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.direct-upload&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fileupload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;action&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;autoUpload&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;dataType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;xml&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// This is really important as s3 gives us back the url of the file in a XML document&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/signed_urls&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;dataType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}},&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// send the file name to the server so it can generate the key param&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Now that we have our data, we update the form so it contains all&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// the needed data to sign the request&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;input[name=key]&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;input[name=policy]&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;policy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;input[name=signature]&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;signature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.progress&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fadeIn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;progress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// This is what makes everything really cool, thanks to that callback&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// you can now update the progress bar based on the upload progress&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;percent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loaded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;width&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;percent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;fail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;fail&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Here we get the file url on s3 in an xml doc&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Location&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#real_file_url&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Update the real input in the other form&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.progress&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fadeOut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;width&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    &lt;p&gt;So quick explanation about what&#39;s going on here : &lt;/p&gt;
    &lt;p&gt;The &lt;code&gt;add&lt;/code&gt; callback allows us to fetch the missing data before the upload. Once we have the data, we simply insert them in the form&lt;/p&gt;
    &lt;p&gt;The &lt;code&gt;send&lt;/code&gt; and &lt;code&gt;done&lt;/code&gt; callbacks are only used for UX purpose, they show and hide the progress bar when needed. The real magic is the &lt;code&gt;progress&lt;/code&gt; callback as it gives you the current progress of the upload in the event argument.&lt;/p&gt;
    &lt;p&gt;In my example, this form sits next to a &#39;real&#39; rails form which is used to save an object which has amongst its attributes a file_url, linked to the &quot;big file&quot; we just uploaded. So once the upload is done I fill the &#39;real&#39; field so my object is correctly created with the good url without having to handle extra things. After submitting the real form my object is saved with the URL of the file uploaded on S3.&lt;/p&gt;
    &lt;p&gt;If you&#39;re uploading public files, you&#39;re good to go, everything&#39;s perfect. But if you&#39;re uploading private file (this is set with the acl params), you still have a last thing to handle.&lt;/p&gt;
    &lt;p&gt;Indeed the url itself is not enough, if you try accessing it, you&#39;ll face some ugly xml &lt;a href=&quot;https://s3-eu-west-1.amazonaws.com/lpdc/glyphicons_003_user.png&quot;&gt;like that&lt;/a&gt;.
    The solution I used was to use the &lt;a href=&quot;http://amazon.rubyforge.org/&quot;&gt;aws gem&lt;/a&gt; which provides a great method : &lt;a href=&quot;http://amazon.rubyforge.org/doc/classes/AWS/S3/S3Object.html&quot;&gt;AWS::S3Object#url_for&lt;/a&gt;. With that method, you can get an authorized url for the desired duration with your bucket name and the key (the path of your file in the bucket) of your file&lt;/p&gt;
    &lt;p&gt;So my custom url accessor looked something like this : &lt;/p&gt;

    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;url&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;parent_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# If the url is nil, there&amp;#39;s no need to look in the bucket for it&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parent_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# This will give you the last part of the URL, the &amp;#39;key&amp;#39; params you need&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# but it&amp;#39;s URL encoded, so you&amp;#39;ll need to decode it&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;object_key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parent_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/\//&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;AWS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:S3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;S3Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;CGI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:unescape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;S3_BUCKET&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;use_ssl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    &lt;p&gt;This involves some weird handling with the &lt;code&gt;CGI::unescape&lt;/code&gt;, and there&#39;s probably a better way to achieve this, but this is one way to do it, and it works fine.&lt;/p&gt;
    &lt;h2&gt;Live example&lt;/h2&gt;
  &lt;p&gt;I&#39;ll set up a live example running on heroku, on which you&#39;ll be able to upload files in more than 30s coming soon &lt;/p&gt;
  &lt;h3&gt;Finally !&lt;/h3&gt;
&lt;p&gt;The demo if finally here : &lt;a href=&quot;http://direct-upload.herokuapp.com&quot;  &gt;http://direct-upload.herokuapp.com&lt;/a&gt; and code source can be found here :  &lt;a href=&quot;https://github.com/pjambet/direct-upload&quot;  &gt;https://github.com/pjambet/direct-upload&lt;/a&gt; &lt;/p&gt;

    &lt;h2&gt;EDIT&lt;/h2&gt;
    &lt;p&gt;I changed every access to AWS variables (BUCKET, SECRET_KEY and ACCESS_KEY) by using environment variables.
    By doing so you don&#39;t have to put the variables directly in your files, but you just have to set correctly the variables :&lt;/p&gt;

    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;  &lt;span class=&quot;n&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;S3_BUCKET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;YOUR&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BUCKET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;YOUR&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AWS_SECRET_KEY_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;YOUR&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SECRET&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    &lt;p&gt;When deploying on heroku you just have to set the variables with &lt;/p&gt;

    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;  &lt;span class=&quot;n&quot;&gt;heroku&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;YOUR&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;YOUR&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;APP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt;      &lt;a href=&quot;/blog/beech-app&quot; title=&quot;Next Post: New revolutionnary app coming soon&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;   &lt;/p&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;span9 columns&quot;&gt;
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt;
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;githubpagepjambet&#39;; // required: replace example with your forum shortname
            var disqus_identifier = &#39;/blog/direct-upload-to-s3&#39;;
            var disqus_url = &#39;http://pjambet.github.com/blog/direct-upload-to-s3&#39;;

            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;!-- Twitter --&gt;

&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;

&lt;!-- Google + --&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;
</content>
 </entry>
 

</feed>
